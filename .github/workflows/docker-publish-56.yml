name: PHP 5.6

on:
  push:
    branches:
      - master

    tags:
      - v*

  pull_request:

jobs:
  
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare code
        run: |
          touch .env
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> .env
          echo "CODECOMMIT_HOST=${{ secrets.CODECOMMIT_HOST }}" >> .env
          echo "CODECOMMIT_USER=${{ secrets.CODECOMMIT_USER }}" >> .env
          echo "CODECOMMIT_PASSWORD=${{ secrets.CODECOMMIT_PASSWORD }}" >> .env
          echo "VERSAO=56-dev" >> .env

      - name: Run tests
        run: |
          docker pull likesistemas/php -a

          docker-compose -f docker-compose-56.yml up --build -d
          echo $(docker run -t --network php56 jwilder/dockerize -wait http://php56_nginx/ -timeout 60s)

          docker ps -a
          docker logs php56_app

          CONTENT=$(curl -s "http://127.0.0.1/");
          echo "CHAMADA HTTP: ${CONTENT}";

          if [ "${CONTENT}" != "Like Sistemas|123|56" ]; then
            echo "Chamada HTTP retornou errado: ${CONTENT}"
            exit 1;
          fi

          LOGS=$(cat www56/events.log);
          echo "EVENTS LOG: ${LOGS}";
          if [[ ! $LOGS =~ "started" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "src-copied" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "composer-ready" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "composer-vendor-ready" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "cmd-executed" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "db-ready" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "db-migrated" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "db-sown" ]]; then exit 1; fi
          if [[ ! $LOGS =~ "ready" ]]; then exit 1; fi

          docker-compose -f docker-compose-56.yml -f docker-compose.prod.yml up --build -d
          echo $(docker run -t --network php56 jwilder/dockerize -wait http://php56_nginx/ -timeout 60s)

          docker ps -a
          docker logs php56_app

          CONTENT=$(curl -s "http://127.0.0.1/");
          echo "CHAMADA HTTP: ${CONTENT}";

          if [ "${CONTENT}" != "56" ]; then
            echo "Chamada HTTP retornou errado: ${CONTENT}"
            exit 1;
          fi

          CLI_RETURN=$(docker run -e CLI=true likesistemas/php:56-dev php -r "echo 'cmd=lk';");
          echo "CLI: ${CLI_RETURN}";

          if [[ ! $CLI_RETURN =~ "cmd=lk" ]]; then
            echo "Chamada CLI retornou errado: ${CLI_RETURN}"
            exit 1;
          fi

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile-56
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            likesistemas/php:56
            likesistemas/php:5.6
            ghcr.io/likesistemas/php:56
            ghcr.io/likesistemas/php:5.6